{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","actions.js","api/api.js","constants.js","containers/App.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","_ref","id","name","email","console","log","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","CounterButton","incrementCount","count","decrementCount","nextProps","nextState","color","btnGreen","onClick","btnRed","Header","components_CounterButton","requestRobots","dispatch","link","fetch","then","response","json","users","payload","catch","App","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","onRequestRobots","connect","searchRobots","event","target","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialStateSearch","initialStateRobots","logger","createLogger","rootReducers","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4RAeeA,EAbF,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,GAAIC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,MAEtB,OADAC,QAAQC,IAAI,uBAERC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BX,EAA1B,mBACrBK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKN,GACLI,EAAAC,EAAAC,cAAA,SAAIL,MCiBLU,EAvBE,SAAAb,GAAgB,IAAbc,EAAad,EAAbc,OAKhB,OAJAV,QAAQC,IAAI,2BAKRC,EAAAC,EAAAC,cAAA,WAEQM,EAAOC,IAAI,SAACC,EAAMC,GACd,OACIX,EAAAC,EAAAC,cAACU,EAAD,CACIC,IAAKH,EAAKf,GACVA,GAAIe,EAAKf,GACTC,KAAMc,EAAKd,KACXC,MAAOa,EAAKb,YCAzBiB,EAfG,SAAApB,GAAsB,IAAnBqB,EAAmBrB,EAAnBqB,aAEjB,OADAjB,QAAQC,IAAI,4BAERC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SACIc,aAAW,gBACXb,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUJ,MCGXK,EAZA,SAACC,GAKZ,OAJAvB,QAAQC,IAAI,yBAKRC,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCoBJC,cAzBX,SAAAA,EAAYN,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACf7B,QAAQC,IAAI,gCACZ6B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMV,KACDc,MAAQ,CACTC,UAAU,GAJCR,iFASDS,EAAOC,GACrBxC,QAAQC,IAAI,qCAGZgC,KAAKQ,SAAS,CAAEH,UAAU,qCAK1B,OADAtC,QAAQC,IAAI,0BACRgC,KAAKI,MAAMC,SACJpC,EAAAC,EAAAC,cAAA,yCAEJ6B,KAAKV,MAAMK,gBAvBEc,aCqDbC,cApDX,SAAAA,IAAc,IAAAb,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,GACV3C,QAAQC,IAAI,gCACZ6B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAY,GAAAP,KAAAH,QAgBJW,eAAiB,WACb5C,QAAQC,IAAI,kCAEZ6B,EAAKW,SAAS,SAAAJ,GACV,MAAO,CAAEQ,MAAOR,EAAMQ,MAAQ,MAtBxBf,EA0BdgB,eAAiB,WACb9C,QAAQC,IAAI,kCACZ6B,EAAKW,SAAS,SAAAJ,GACV,OAAoB,IAAhBA,EAAMQ,MACC,CAAEA,MAAO,GAEb,CAAEA,MAAOR,EAAMQ,MAAQ,MA7BlCf,EAAKO,MAAQ,CACTQ,MAAO,GAJDf,qFASQiB,EAAWC,GAG7B,OAFAhD,QAAQC,IAAI,yCAERgC,KAAKI,MAAMQ,QAAUG,EAAUH,uCA0BnC,OADA7C,QAAQC,IAAI,0BAERC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQoB,MAAO,CAAEyB,MAAOhB,KAAKV,MAAM2B,UAAYC,QAASlB,KAAKW,gBAA7D,WAGA1C,EAAAC,EAAAC,cAAA,UAAQoB,MAAO,CAAEyB,MAAOhB,KAAKV,MAAM6B,QAAUD,QAASlB,KAAKa,gBAA3D,WAGA5C,EAAAC,EAAAC,cAAA,cAAS6B,KAAKI,MAAMQ,eA/CRH,aCqBbW,gMAjBWN,EAAWC,GAG7B,OAFAhD,QAAQC,IAAI,mCAEL,mCAKP,OADAD,QAAQC,IAAI,mBAERC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,cACAH,EAAAC,EAAAC,cAACkD,EAAD,CAAeF,OAAQ,MAAOF,SAAU,kBAdnCR,aCURa,EAAgB,kBAAM,SAACC,GCbb,IAACC,EDcpBD,EAAS,CAAErC,KEZuB,4BDFdsC,EDgBZ,6CChBqBC,MAAMD,GAAME,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UDiB9DF,KAAK,SAAAG,GAAK,OAAIN,EAAS,CACpBrC,KEf0B,yBFgB1B4C,QAASD,MAEZE,MAAM,SAAAzB,GAAK,OAAIiB,EAAS,CACrBrC,KElByB,wBFmBzB4C,QAASxB,QGQf0B,0LAGEjE,QAAQC,IAAI,gBADP,IAAAiE,EAEsDjC,KAAKV,MAAxD4C,EAFHD,EAEGC,YAAaC,EAFhBF,EAEgBE,eAAgB1D,EAFhCwD,EAEgCxD,OAAQ2D,EAFxCH,EAEwCG,UACvCC,EAAiB5D,EAAO6D,OAAO,SAAAC,GACjC,OAAOA,EAAM1E,KAAK2E,cAAcC,SAASP,EAAYM,iBAGzD,OAAIJ,EACOnE,EAAAC,EAAAC,cAAA,wBAGHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACwE,EAAD,CAAW3D,aAAcmD,IACzBlE,EAAAC,EAAAC,cAACyE,EAAD,KACI3E,EAAAC,EAAAC,cAAC0E,EAAD,KACI5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAUrE,OAAQ4D,mDAStCtE,QAAQC,IAAI,2BACZgC,KAAKV,MAAMyD,yBA5BDtC,cAiCHuC,cArDS,SAAC5C,GAErB,OADArC,QAAQC,IAAI,yBACL,CACHkE,YAAa9B,EAAM6C,aAAaf,YAChCzD,OAAQ2B,EAAMkB,cAAc7C,OAC5B2D,UAAWhC,EAAMkB,cAAcc,UAC/B9B,MAAOF,EAAMkB,cAAchB,QAMR,SAACiB,GAExB,OADAxD,QAAQC,IAAI,4BACL,CACHmE,eAAgB,SAACe,GAAD,OAAW3B,EHlBM,CACrCrC,KET8B,qBFU9B4C,QGgBuDoB,EAAMC,OAAOC,SAChEL,gBAAiB,kBAAMxB,EAASD,QAqCzB0B,CAA6ChB,GCpDtDqB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTlC,KAAK,SAAAuC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/D,QACf0D,UAAUC,cAAcO,YAI1BvG,QAAQC,IACN,iHAKE6F,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBlG,QAAQC,IAAI,sCAGR6F,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,UAO5BlC,MAAM,SAAAzB,GACLvC,QAAQuC,MAAM,4CAA6CA,KCzFjE,IAAMmE,EAAqB,CACvBvC,YAAa,IAYXwC,EAAqB,CACvBjG,OAAQ,GACR2D,WAAW,EACX9B,MAAO,ICXLqE,SAASC,0BAETC,EAAeC,YAAgB,CAAE7B,aDHX,WAA6C,IAA5C7C,EAA4C2E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCN,EAAoBS,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC9D,OAAQG,EAAOhG,MACX,IHb0B,qBGctB,OAAOY,OAAOqF,OAAO,GAAI/E,EAAO,CAAE8B,YAAagD,EAAOpD,UAC1D,QACI,OAAO1B,ICFkCkB,cDYxB,WAA6C,IAA5ClB,EAA4C2E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCL,EAAoBQ,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC/D,OAAQG,EAAOhG,MACX,IH1B8B,yBG2B1B,OAAOY,OAAOqF,OAAO,GAAI/E,EAAO,CAAEgC,WAAW,IACjD,IH3B8B,yBG4B1B,OAAOtC,OAAOqF,OAAO,GAAI/E,EAAO,CAAE3B,OAAQyG,EAAOpD,QAASM,WAAW,IACzE,IH5B6B,wBG6BzB,OAAOtC,OAAOqF,OAAO,GAAI/E,EAAO,CAAEE,MAAO4E,EAAOpD,UACpD,QACI,OAAO1B,MCnBbgF,EAAQC,YAAYR,EAAcS,YAAgBC,IAAiBZ,IAEzEa,IAASC,OACLxH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAUN,MAAOA,GACbnH,EAAAC,EAAAC,cAACwH,EAAD,OAEJC,SAASC,eAAe,SFArB,SAAkBhC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgC,IAAIC,qBAAwBxC,OAAOC,SAASwC,MACpDC,SAAW1C,OAAOC,SAASyC,OAIvC,OAGF1C,OAAO2C,iBAAiB,OAAQ,WAC9B,IAAMtC,EAAK,GAAArF,OAAMwH,qBAAN,sBAEP1C,GAgEV,SAAiCO,EAAOC,GAEtCpC,MAAMmC,GACHlC,KAAK,SAAAC,GAEJ,IAAMwE,EAAcxE,EAASyE,QAAQC,IAAI,gBAEnB,MAApB1E,EAAS2E,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CzC,UAAUC,cAAcyC,MAAM9E,KAAK,SAAAuC,GACjCA,EAAawC,aAAa/E,KAAK,WAC7B6B,OAAOC,SAASkD,aAKpB/C,EAAgBC,EAAOC,KAG1B9B,MAAM,WACLhE,QAAQC,IACN,mEArFA2I,CAAwB/C,EAAOC,GAI/BC,UAAUC,cAAcyC,MAAM9E,KAAK,WACjC3D,QAAQC,IACN,gHAMJ2F,EAAgBC,EAAOC,MErB/BE","file":"static/js/main.a6214093.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n    console.log('Card - PureFunction');\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    console.log('CardList - PureFunction');\n    /* if (true) {\n        throw new Error('CardList Error !!!');\n    } */\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                            key={user.id}\n                            id={user.id}\n                            name={user.name}\n                            email={user.email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    console.log('SearchBox - PureFunction');\n    return (\n        <div className='pa2'>\n            <input\n                aria-label=\"Search Robots\"\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    console.log('Scroll - PureFunction');\n    // console.log(props);\n    // return <h1>My Children</h1>;\n    // return props.children;\n    return (\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\n    constructor(props) {\n        console.log('ErrorBoundary - constructor');\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    // catch Errors\n    componentDidCatch(error, info) {\n        console.log('ErrorBoundary - componentDidCatch');\n        // console.log(error);\n        // console.log(info);\n        this.setState({ hasError: true });\n    }\n\n    render() {\n        console.log('ErrorBoundary - render');\n        if (this.state.hasError) {\n            return <h1>OOPs! Something went wrong.</h1>;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\n\nclass CounterButton extends Component {\n    constructor() {\n        console.log('CounterButton - constructor');\n        super();\n        this.state = {\n            count: 0\n        }\n    }\n\n    // Use this function with Caution. Overuse may cause Performance Penalty.\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('CounterButton - shouldComponentUpdate');\n        // console.log(nextProps, nextState);\n        if (this.state.count !== nextState.count) { // conditional restrict the Component from getting updated/rendered\n            return true;\n        }\n        return false;\n    }\n\n    incrementCount = () => {\n        console.log('CounterButton - incrementCount');\n        // this.setState({ count: this.state.count + 1 });  // sync state update\n        this.setState(state => {                            // async state update\n            return { count: state.count + 1 };\n        });\n    }\n\n    decrementCount = () => {\n        console.log('CounterButton - decrementCount');\n        this.setState(state => {\n            if (state.count === 0) {\n                return { count: 0 };\n            }\n            return { count: state.count - 1 };\n        });\n    }\n\n    render() {\n        console.log('CounterButton - render');\n        return (\n            <div>\n                <button style={{ color: this.props.btnGreen }} onClick={this.incrementCount}>\n                    Count++\n                </button>\n                <button style={{ color: this.props.btnRed }} onClick={this.decrementCount}>\n                    Count--\n                </button>\n                <button>{this.state.count}</button>\n            </div>\n        );\n    }\n}\n\nexport default CounterButton;","import React, { Component } from 'react';\nimport CounterButton from './CounterButton';\n\nclass Header extends Component {\n\n    // Use this function with Caution. Overuse may cause Performance Penalty.\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('Header - shouldComponentUpdate');\n        // return true;    // update/render the component (true by Default)\n        return false;   // restrict the Component from getting updated/rendered\n    }\n\n    render() {\n        console.log('Header - render');\n        return (\n            <div>\n                <h1 className='f1'>RoboFriend</h1>\n                <CounterButton btnRed={'red'} btnGreen={'green'} />\n            </div>\n        );\n    }\n}\n\nexport default Header;","import { apiCall } from './api/api';\nimport {\n    CHANGE_SEARCHFIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCHFIELD,\n    payload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\n\n    apiCall('https://jsonplaceholder.typicode.com/users')\n        .then(users => dispatch({\n            type: REQUEST_ROBOTS_SUCCESS,\n            payload: users\n        }))\n        .catch(error => dispatch({\n            type: REQUEST_ROBOTS_FAILED,\n            payload: error\n        }))\n}","export const apiCall = (link) => fetch(link).then(response => response.json());","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Header from '../components/Header';\nimport { setSearchField, requestRobots } from '../actions';\nimport './App.css';\n\n// parameter state comes from index.js provider store state(rootReducers)\nconst mapStateToProps = (state) => {\n    console.log('App - mapStateToProps');\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from reducers.\nconst mapDispatchToProps = (dispatch) => {\n    console.log('App - mapDispatchToProps');\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => dispatch(requestRobots()),\n    }\n}\n\nclass App extends Component {\n\n    render() {\n        console.log('App - render');\n        const { searchField, onSearchChange, robots, isPending } = this.props;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n        // for slow connections\n        if (isPending) {\n            return <h1>Loading...</h1>;\n        } else {\n            return (\n                <div className='tc'>\n                    <Header />\n                    <SearchBox searchChange={onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n\n    componentDidMount() {\n        console.log('App - componentDidMount');\n        this.props.onRequestRobots();\n    }\n}\n\n// action done from mapDispatchToProps will channge state from mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    CHANGE_SEARCHFIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants';\n\nconst initialStateSearch = {\n    searchField: ''\n}\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCHFIELD:\n            return Object.assign({}, state, { searchField: action.payload });\n        default:\n            return state;\n    }\n};\n\nconst initialStateRobots = {\n    robots: [],\n    isPending: true,\n    error: ''\n}\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n    switch (action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, { isPending: true });\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, { robots: action.payload, isPending: false });\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, { error: action.payload });\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducers = combineReducers({ searchRobots, requestRobots });\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}